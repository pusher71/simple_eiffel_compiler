digraph g {
154[label="program"];
26[label="class sequence element"];
25[label="class <MAIN>"];
1[label="creators block"];
0[label="id <make>"];
1 -> 0[label="0"];
25 -> 1[label="creators: 0"];
24[label="features block"];
23[label="feature decl"];
22[label="feature decl: routine"];
2[label="id <make>"];
22 -> 2[label="0"];
5[label="IDs with type"];
3[label="id <obj>"];
5 -> 3[label="0"];
4[label="custom dtype <A>"];
5 -> 4[label="type"];
22 -> 5[label="local: 0"];
6[label="instruction seq elem"];
22 -> 6[label="0"];
9[label="instruction seq elem"];
8[label="instruction :: assign to <obj>"];
7[label="expr :: basic create of class <O>"];
8 -> 7[label="assign expr"];
9 -> 8;
22 -> 9[label="1"];
13[label="instruction seq elem"];
12[label="instruction as expr"];
11[label="expr :: subcall <f>"];
10[label="expr :: my method or var <obj>"];
11 -> 10[label="expr_left"];
12 -> 11;
13 -> 12;
22 -> 13[label="2"];
17[label="instruction seq elem"];
16[label="instruction as expr"];
15[label="expr :: subcall <f4>"];
14[label="expr :: my method or var <obj>"];
15 -> 14[label="expr_left"];
16 -> 15;
17 -> 16;
22 -> 17[label="3"];
21[label="instruction seq elem"];
20[label="instruction as expr"];
19[label="expr :: subcall <f5>"];
18[label="expr :: my method or var <obj>"];
19 -> 18[label="expr_left"];
20 -> 19;
21 -> 20;
22 -> 21[label="4"];
23 -> 22;
24 -> 23[label="0"];
25 -> 24[label="features: 0"];
26 -> 25;
154 -> 26[label="0"];
61[label="class sequence element"];
60[label="class <O>"];
32[label="parent sequence element"];
31[label="parent <I1>"];
27[label="<f5> to <f6>"];
31 -> 27[label="rename: 0"];
28[label="id <f6>"];
31 -> 28[label="redef: 0"];
29[label="id <f2>"];
31 -> 29[label="sel: 0"];
30[label="id <f6>"];
31 -> 30[label="sel: 1"];
32 -> 31;
60 -> 32[label="parent: 0"];
35[label="parent sequence element"];
34[label="parent <N>"];
33[label="id <f8>"];
34 -> 33[label="redef: 0"];
35 -> 34;
60 -> 35[label="parent: 1"];
38[label="parent sequence element"];
37[label="parent <A>"];
36[label="<f> to <f7>"];
37 -> 36[label="rename: 0"];
38 -> 37;
60 -> 38[label="parent: 2"];
59[label="features block"];
48[label="feature decl"];
47[label="feature decl: routine"];
39[label="id <f6>"];
47 -> 39[label="0"];
40[label="instruction seq elem"];
47 -> 40[label="0"];
46[label="instruction seq elem"];
45[label="instruction as expr"];
44[label="expr :: subcall <put_string>"];
41[label="expr :: my method or var <io>"];
44 -> 41[label="expr_left"];
43[label="argument"];
42[label="expr :: str <O::f6()
>"];
43 -> 42;
44 -> 43[label="0"];
45 -> 44;
46 -> 45;
47 -> 46[label="1"];
48 -> 47;
59 -> 48[label="0"];
58[label="feature decl"];
57[label="feature decl: routine"];
49[label="id <f8>"];
57 -> 49[label="0"];
50[label="instruction seq elem"];
57 -> 50[label="0"];
56[label="instruction seq elem"];
55[label="instruction as expr"];
54[label="expr :: subcall <put_string>"];
51[label="expr :: my method or var <io>"];
54 -> 51[label="expr_left"];
53[label="argument"];
52[label="expr :: str <O::f8()
>"];
53 -> 52;
54 -> 53[label="0"];
55 -> 54;
56 -> 55;
57 -> 56[label="1"];
58 -> 57;
59 -> 58[label="1"];
60 -> 59[label="features: 0"];
61 -> 60;
154 -> 61[label="1"];
68[label="class sequence element"];
67[label="class <N>"];
63[label="parent sequence element"];
62[label="parent <M1>"];
63 -> 62;
67 -> 63[label="parent: 0"];
66[label="parent sequence element"];
65[label="parent <M2>"];
64[label="id <f3>"];
65 -> 64[label="sel: 0"];
66 -> 65;
67 -> 66[label="parent: 1"];
68 -> 67;
154 -> 68[label="2"];
72[label="class sequence element"];
71[label="class <M1>"];
70[label="parent sequence element"];
69[label="parent <I2>"];
70 -> 69;
71 -> 70[label="parent: 0"];
72 -> 71;
154 -> 72[label="3"];
99[label="class sequence element"];
98[label="class <M2>"];
76[label="parent sequence element"];
75[label="parent <I2>"];
73[label="<f> to <f3>"];
75 -> 73[label="rename: 0"];
74[label="id <f3>"];
75 -> 74[label="redef: 0"];
76 -> 75;
98 -> 76[label="parent: 0"];
97[label="features block"];
86[label="feature decl"];
85[label="feature decl: routine"];
77[label="id <f3>"];
85 -> 77[label="0"];
78[label="instruction seq elem"];
85 -> 78[label="0"];
84[label="instruction seq elem"];
83[label="instruction as expr"];
82[label="expr :: subcall <put_string>"];
79[label="expr :: my method or var <io>"];
82 -> 79[label="expr_left"];
81[label="argument"];
80[label="expr :: str <M2::f3()
>"];
81 -> 80;
82 -> 81[label="0"];
83 -> 82;
84 -> 83;
85 -> 84[label="1"];
86 -> 85;
97 -> 86[label="0"];
96[label="feature decl"];
95[label="feature decl: routine"];
87[label="id <f8>"];
95 -> 87[label="0"];
88[label="instruction seq elem"];
95 -> 88[label="0"];
94[label="instruction seq elem"];
93[label="instruction as expr"];
92[label="expr :: subcall <put_string>"];
89[label="expr :: my method or var <io>"];
92 -> 89[label="expr_left"];
91[label="argument"];
90[label="expr :: str <M2::f8()
>"];
91 -> 90;
92 -> 91[label="0"];
93 -> 92;
94 -> 93;
95 -> 94[label="1"];
96 -> 95;
97 -> 96[label="1"];
98 -> 97[label="features: 0"];
99 -> 98;
154 -> 99[label="4"];
116[label="class sequence element"];
115[label="class <I1>"];
103[label="parent sequence element"];
102[label="parent <A>"];
100[label="<f> to <f2>"];
102 -> 100[label="rename: 0"];
101[label="id <f2>"];
102 -> 101[label="redef: 0"];
103 -> 102;
115 -> 103[label="parent: 0"];
114[label="features block"];
113[label="feature decl"];
112[label="feature decl: routine"];
104[label="id <f2>"];
112 -> 104[label="0"];
105[label="instruction seq elem"];
112 -> 105[label="0"];
111[label="instruction seq elem"];
110[label="instruction as expr"];
109[label="expr :: subcall <put_string>"];
106[label="expr :: my method or var <io>"];
109 -> 106[label="expr_left"];
108[label="argument"];
107[label="expr :: str <I1::f2()
>"];
108 -> 107;
109 -> 108[label="0"];
110 -> 109;
111 -> 110;
112 -> 111[label="1"];
113 -> 112;
114 -> 113[label="0"];
115 -> 114[label="features: 0"];
116 -> 115;
154 -> 116[label="5"];
120[label="class sequence element"];
119[label="class <I2>"];
118[label="parent sequence element"];
117[label="parent <A>"];
118 -> 117;
119 -> 118[label="parent: 0"];
120 -> 119;
154 -> 120[label="6"];
153[label="class sequence element"];
152[label="class <A>"];
151[label="features block"];
130[label="feature decl"];
129[label="feature decl: routine"];
121[label="id <f>"];
129 -> 121[label="0"];
122[label="instruction seq elem"];
129 -> 122[label="0"];
128[label="instruction seq elem"];
127[label="instruction as expr"];
126[label="expr :: subcall <put_string>"];
123[label="expr :: my method or var <io>"];
126 -> 123[label="expr_left"];
125[label="argument"];
124[label="expr :: str <A::f()
>"];
125 -> 124;
126 -> 125[label="0"];
127 -> 126;
128 -> 127;
129 -> 128[label="1"];
130 -> 129;
151 -> 130[label="0"];
140[label="feature decl"];
139[label="feature decl: routine"];
131[label="id <f4>"];
139 -> 131[label="0"];
132[label="instruction seq elem"];
139 -> 132[label="0"];
138[label="instruction seq elem"];
137[label="instruction as expr"];
136[label="expr :: subcall <put_string>"];
133[label="expr :: my method or var <io>"];
136 -> 133[label="expr_left"];
135[label="argument"];
134[label="expr :: str <A::f4()
>"];
135 -> 134;
136 -> 135[label="0"];
137 -> 136;
138 -> 137;
139 -> 138[label="1"];
140 -> 139;
151 -> 140[label="1"];
150[label="feature decl"];
149[label="feature decl: routine"];
141[label="id <f5>"];
149 -> 141[label="0"];
142[label="instruction seq elem"];
149 -> 142[label="0"];
148[label="instruction seq elem"];
147[label="instruction as expr"];
146[label="expr :: subcall <put_string>"];
143[label="expr :: my method or var <io>"];
146 -> 143[label="expr_left"];
145[label="argument"];
144[label="expr :: str <A::f5()
>"];
145 -> 144;
146 -> 145[label="0"];
147 -> 146;
148 -> 147;
149 -> 148[label="1"];
150 -> 149;
151 -> 150[label="2"];
152 -> 151[label="features: 0"];
153 -> 152;
154 -> 153[label="7"];
}
