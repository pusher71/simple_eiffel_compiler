State 102 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 166 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 175 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_decl_seq

    2 class_decl_seq: class_decl
    3               | class_decl_seq class_decl

    4 identifiers_comma_seq: ID
    5                      | identifiers_comma_seq ',' ID

    6 opt_semicolon: /* empty */
    7              | ';'

    8 opt_semicolon_seq: /* empty */
    9                  | nonempty_opt_semicolon_seq

   10 nonempty_opt_semicolon_seq: ';'
   11                           | nonempty_opt_semicolon_seq ';'

   12 class_decl: CLASS ID inheritance_block creators_block features_block END

   13 inheritance_block: /* empty */
   14                  | INHERIT
   15                  | INHERIT parent_seq

   16 parent_seq: parent opt_semicolon
   17           | parent_seq parent opt_semicolon

   18 parent: ID
   19       | ID parent_info END

   20 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   21            | UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   22            | RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   23            | REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   25            | UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   26            | RENAME rename_seq SELECT identifiers_comma_seq
   27            | SELECT identifiers_comma_seq
   28            | RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   29            | UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   30            | RENAME rename_seq REDEFINE identifiers_comma_seq
   31            | REDEFINE identifiers_comma_seq
   32            | RENAME rename_seq UNDEFINE identifiers_comma_seq
   33            | UNDEFINE identifiers_comma_seq
   34            | RENAME rename_seq

   35 rename_seq: ID AS ID
   36           | rename_seq ',' ID AS ID

   37 creators_block: /* empty */
   38               | nonempty_creators_block

   39 nonempty_creators_block: CREATE identifiers_comma_seq
   40                        | nonempty_creators_block CREATE identifiers_comma_seq

   41 features_block: /* empty */
   42               | nonempty_features_block

   43 nonempty_features_block: FEATURE feature_decl_seq
   44                        | nonempty_features_block FEATURE feature_decl_seq

   45 feature_decl_seq: /* empty */
   46                 | nonempty_feature_decl_seq

   47 nonempty_feature_decl_seq: feature_decl opt_semicolon_seq
   48                          | nonempty_feature_decl_seq feature_decl opt_semicolon_seq

   49 feature_decl: identifiers_comma_seq ':' type
   50             | identifiers_comma_seq ':' type routine_decl_body
   51             | identifiers_comma_seq routine_decl_body
   52             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type routine_decl_body
   53             | identifiers_comma_seq '(' ids_with_type_seq ')' routine_decl_body

   54 ids_with_type_seq: /* empty */
   55                  | nonempty_ids_with_type_seq

   56 nonempty_ids_with_type_seq: ids_with_type opt_semicolon
   57                           | nonempty_ids_with_type_seq ids_with_type opt_semicolon

   58 ids_with_type: identifiers_comma_seq ':' type

   59 routine_decl_body: DO opt_semicolon_seq instruction_seq END
   60                  | DO opt_semicolon_seq END
   61                  | LOCAL ids_with_type_seq DO opt_semicolon_seq instruction_seq END
   62                  | LOCAL ids_with_type_seq DO opt_semicolon_seq END

   63 instruction_seq: instruction opt_semicolon_seq
   64                | instruction_seq instruction opt_semicolon_seq

   65 instruction: CREATE ID
   66            | CREATE ID '.' ID
   67            | CREATE ID '.' ID '(' argument_seq ')'
   68            | call

   69 call: ID
   70     | ID '(' argument_seq ')'
   71     | ID '.' call_sub_seq
   72     | ID '(' argument_seq ')' '.' call_sub_seq
   73     | CURRENT '.' call_sub_seq
   74     | RESULT '.' call_sub_seq
   75     | '(' expr ')' '.' call_sub_seq
   76     | PRECURSOR
   77     | PRECURSOR '(' argument_seq ')'
   78     | PRECURSOR '.' call_sub_seq
   79     | PRECURSOR '(' argument_seq ')' '.' call_sub_seq
   80     | PRECURSOR '{' ID '}'
   81     | PRECURSOR '{' ID '}' '(' argument_seq ')'
   82     | PRECURSOR '{' ID '}' '.' call_sub_seq
   83     | PRECURSOR '{' ID '}' '(' argument_seq ')' '.' call_sub_seq

   84 call_sub_seq: ID
   85             | ID '(' argument_seq ')'
   86             | call_sub_seq '.' ID
   87             | call_sub_seq '.' ID '(' argument_seq ')'

   88 argument_seq: /* empty */
   89             | nonempty_argument_seq

   90 nonempty_argument_seq: expr
   91                      | nonempty_argument_seq ',' expr

   92 expr: '(' expr ')'
   93     | LITER_BOOLEAN
   94     | LITER_INTEGER
   95     | LITER_CHAR
   96     | LITER_STRING
   97     | call

   98 type: ID
   99     | DATATYPE_BOOLEAN
  100     | DATATYPE_CHARACTER
  101     | DATATYPE_INTEGER_8
  102     | DATATYPE_INTEGER_16
  103     | DATATYPE_INTEGER_32
  104     | DATATYPE_INTEGER_64
  105     | DATATYPE_NATURAL_8
  106     | DATATYPE_NATURAL_16
  107     | DATATYPE_NATURAL_32
  108     | DATATYPE_NATURAL_64
  109     | DATATYPE_STRING


Terminals, with rules where they appear

$end (0) 0
'(' (40) 52 53 67 70 72 75 77 79 81 83 85 87 92
')' (41) 52 53 67 70 72 75 77 79 81 83 85 87 92
',' (44) 5 36 91
'.' (46) 66 67 71 72 73 74 75 78 79 82 83 86 87
':' (58) 49 50 52 58
';' (59) 7 10 11
'{' (123) 80 81 82 83
'}' (125) 80 81 82 83
error (256)
ID (258) 4 5 12 18 19 35 36 65 66 67 69 70 71 72 80 81 82 83 84 85
    86 87 98
CLASS (259) 12
END (260) 12 19 59 60 61 62
DATATYPE_BOOLEAN (261) 99
DATATYPE_CHARACTER (262) 100
DATATYPE_INTEGER_8 (263) 101
DATATYPE_INTEGER_16 (264) 102
DATATYPE_INTEGER_32 (265) 103
DATATYPE_INTEGER_64 (266) 104
DATATYPE_NATURAL_8 (267) 105
DATATYPE_NATURAL_16 (268) 106
DATATYPE_NATURAL_32 (269) 107
DATATYPE_NATURAL_64 (270) 108
DATATYPE_STRING (271) 109
LITER_BOOLEAN (272) 93
LITER_INTEGER (273) 94
LITER_CHAR (274) 95
LITER_STRING (275) 96
INHERIT (276) 14 15
RENAME (277) 20 22 24 26 28 30 32 34
UNDEFINE (278) 20 21 24 25 28 29 32 33
REDEFINE (279) 20 21 22 23 28 29 30 31
SELECT (280) 20 21 22 23 24 25 26 27
AS (281) 35 36
CREATE (282) 39 40 65 66 67
FEATURE (283) 43 44
LOCAL (284) 61 62
DO (285) 59 60 61 62
CURRENT (286) 73
RESULT (287) 74
PRECURSOR (288) 76 77 78 79 80 81 82 83


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
class_decl_seq (44)
    on left: 2 3, on right: 1 3
identifiers_comma_seq (45)
    on left: 4 5, on right: 5 20 21 22 23 24 25 26 27 28 29 30 31 32
    33 39 40 49 50 51 52 53 58
opt_semicolon (46)
    on left: 6 7, on right: 16 17 56 57
opt_semicolon_seq (47)
    on left: 8 9, on right: 47 48 59 60 61 62 63 64
nonempty_opt_semicolon_seq (48)
    on left: 10 11, on right: 9 11
class_decl (49)
    on left: 12, on right: 2 3
inheritance_block (50)
    on left: 13 14 15, on right: 12
parent_seq (51)
    on left: 16 17, on right: 15 17
parent (52)
    on left: 18 19, on right: 16 17
parent_info (53)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34,
    on right: 19
rename_seq (54)
    on left: 35 36, on right: 20 22 24 26 28 30 32 34 36
creators_block (55)
    on left: 37 38, on right: 12
nonempty_creators_block (56)
    on left: 39 40, on right: 38 40
features_block (57)
    on left: 41 42, on right: 12
nonempty_features_block (58)
    on left: 43 44, on right: 42 44
feature_decl_seq (59)
    on left: 45 46, on right: 43 44
nonempty_feature_decl_seq (60)
    on left: 47 48, on right: 46 48
feature_decl (61)
    on left: 49 50 51 52 53, on right: 47 48
ids_with_type_seq (62)
    on left: 54 55, on right: 52 53 61 62
nonempty_ids_with_type_seq (63)
    on left: 56 57, on right: 55 57
ids_with_type (64)
    on left: 58, on right: 56 57
routine_decl_body (65)
    on left: 59 60 61 62, on right: 50 51 52 53
instruction_seq (66)
    on left: 63 64, on right: 59 61 64
instruction (67)
    on left: 65 66 67 68, on right: 63 64
call (68)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83,
    on right: 68 97
call_sub_seq (69)
    on left: 84 85 86 87, on right: 71 72 73 74 75 78 79 82 83 86 87
argument_seq (70)
    on left: 88 89, on right: 67 70 72 77 79 81 83 85 87
nonempty_argument_seq (71)
    on left: 90 91, on right: 89 91
expr (72)
    on left: 92 93 94 95 96 97, on right: 75 90 91 92
type (73)
    on left: 98 99 100 101 102 103 104 105 106 107 108 109,
    on right: 49 50 52 58


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program         go to state 2
    class_decl_seq  go to state 3
    class_decl      go to state 4


state 1

   12 class_decl: CLASS . ID inheritance_block creators_block features_block END

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_decl_seq .
    3 class_decl_seq: class_decl_seq . class_decl

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class_decl  go to state 7


state 4

    2 class_decl_seq: class_decl .

    $default  reduce using rule 2 (class_decl_seq)


state 5

   12 class_decl: CLASS ID . inheritance_block creators_block features_block END

    INHERIT  shift, and go to state 8

    $default  reduce using rule 13 (inheritance_block)

    inheritance_block  go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_decl_seq: class_decl_seq class_decl .

    $default  reduce using rule 3 (class_decl_seq)


state 8

   14 inheritance_block: INHERIT .
   15                  | INHERIT . parent_seq

    ID  shift, and go to state 10

    $default  reduce using rule 14 (inheritance_block)

    parent_seq  go to state 11
    parent      go to state 12


state 9

   12 class_decl: CLASS ID inheritance_block . creators_block features_block END

    CREATE  shift, and go to state 13

    $default  reduce using rule 37 (creators_block)

    creators_block           go to state 14
    nonempty_creators_block  go to state 15


state 10

   18 parent: ID .
   19       | ID . parent_info END

    RENAME    shift, and go to state 16
    UNDEFINE  shift, and go to state 17
    REDEFINE  shift, and go to state 18
    SELECT    shift, and go to state 19

    $default  reduce using rule 18 (parent)

    parent_info  go to state 20


state 11

   15 inheritance_block: INHERIT parent_seq .
   17 parent_seq: parent_seq . parent opt_semicolon

    ID  shift, and go to state 10

    $default  reduce using rule 15 (inheritance_block)

    parent  go to state 21


state 12

   16 parent_seq: parent . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 23


state 13

   39 nonempty_creators_block: CREATE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 25


state 14

   12 class_decl: CLASS ID inheritance_block creators_block . features_block END

    FEATURE  shift, and go to state 26

    $default  reduce using rule 41 (features_block)

    features_block           go to state 27
    nonempty_features_block  go to state 28


state 15

   38 creators_block: nonempty_creators_block .
   40 nonempty_creators_block: nonempty_creators_block . CREATE identifiers_comma_seq

    CREATE  shift, and go to state 29

    $default  reduce using rule 38 (creators_block)


state 16

   20 parent_info: RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   22            | RENAME . rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | RENAME . rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   26            | RENAME . rename_seq SELECT identifiers_comma_seq
   28            | RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   30            | RENAME . rename_seq REDEFINE identifiers_comma_seq
   32            | RENAME . rename_seq UNDEFINE identifiers_comma_seq
   34            | RENAME . rename_seq

    ID  shift, and go to state 30

    rename_seq  go to state 31


state 17

   21 parent_info: UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   25            | UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   29            | UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq
   33            | UNDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 32


state 18

   23 parent_info: REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   31            | REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 33


state 19

   27 parent_info: SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 34


state 20

   19 parent: ID parent_info . END

    END  shift, and go to state 35


state 21

   17 parent_seq: parent_seq parent . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 36


state 22

    7 opt_semicolon: ';' .

    $default  reduce using rule 7 (opt_semicolon)


state 23

   16 parent_seq: parent opt_semicolon .

    $default  reduce using rule 16 (parent_seq)


state 24

    4 identifiers_comma_seq: ID .

    $default  reduce using rule 4 (identifiers_comma_seq)


state 25

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   39 nonempty_creators_block: CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 39 (nonempty_creators_block)


state 26

   43 nonempty_features_block: FEATURE . feature_decl_seq

    ID  shift, and go to state 24

    $default  reduce using rule 45 (feature_decl_seq)

    identifiers_comma_seq      go to state 38
    feature_decl_seq           go to state 39
    nonempty_feature_decl_seq  go to state 40
    feature_decl               go to state 41


state 27

   12 class_decl: CLASS ID inheritance_block creators_block features_block . END

    END  shift, and go to state 42


state 28

   42 features_block: nonempty_features_block .
   44 nonempty_features_block: nonempty_features_block . FEATURE feature_decl_seq

    FEATURE  shift, and go to state 43

    $default  reduce using rule 42 (features_block)


state 29

   40 nonempty_creators_block: nonempty_creators_block CREATE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 44


state 30

   35 rename_seq: ID . AS ID

    AS  shift, and go to state 45


state 31

   20 parent_info: RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   22            | RENAME rename_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | RENAME rename_seq . UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   26            | RENAME rename_seq . SELECT identifiers_comma_seq
   28            | RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   30            | RENAME rename_seq . REDEFINE identifiers_comma_seq
   32            | RENAME rename_seq . UNDEFINE identifiers_comma_seq
   34            | RENAME rename_seq .
   36 rename_seq: rename_seq . ',' ID AS ID

    UNDEFINE  shift, and go to state 46
    REDEFINE  shift, and go to state 47
    SELECT    shift, and go to state 48
    ','       shift, and go to state 49

    $default  reduce using rule 34 (parent_info)


state 32

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   21 parent_info: UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   25            | UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   29            | UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq
   33            | UNDEFINE identifiers_comma_seq .

    REDEFINE  shift, and go to state 50
    SELECT    shift, and go to state 51
    ','       shift, and go to state 37

    $default  reduce using rule 33 (parent_info)


state 33

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent_info: REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   31            | REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 52
    ','     shift, and go to state 37

    $default  reduce using rule 31 (parent_info)


state 34

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   27 parent_info: SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 27 (parent_info)


state 35

   19 parent: ID parent_info END .

    $default  reduce using rule 19 (parent)


state 36

   17 parent_seq: parent_seq parent opt_semicolon .

    $default  reduce using rule 17 (parent_seq)


state 37

    5 identifiers_comma_seq: identifiers_comma_seq ',' . ID

    ID  shift, and go to state 53


state 38

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   49 feature_decl: identifiers_comma_seq . ':' type
   50             | identifiers_comma_seq . ':' type routine_decl_body
   51             | identifiers_comma_seq . routine_decl_body
   52             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type routine_decl_body
   53             | identifiers_comma_seq . '(' ids_with_type_seq ')' routine_decl_body

    LOCAL  shift, and go to state 54
    DO     shift, and go to state 55
    ','    shift, and go to state 37
    ':'    shift, and go to state 56
    '('    shift, and go to state 57

    routine_decl_body  go to state 58


state 39

   43 nonempty_features_block: FEATURE feature_decl_seq .

    $default  reduce using rule 43 (nonempty_features_block)


state 40

   46 feature_decl_seq: nonempty_feature_decl_seq .
   48 nonempty_feature_decl_seq: nonempty_feature_decl_seq . feature_decl opt_semicolon_seq

    ID  shift, and go to state 24

    $default  reduce using rule 46 (feature_decl_seq)

    identifiers_comma_seq  go to state 38
    feature_decl           go to state 59


state 41

   47 nonempty_feature_decl_seq: feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 61
    nonempty_opt_semicolon_seq  go to state 62


state 42

   12 class_decl: CLASS ID inheritance_block creators_block features_block END .

    $default  reduce using rule 12 (class_decl)


state 43

   44 nonempty_features_block: nonempty_features_block FEATURE . feature_decl_seq

    ID  shift, and go to state 24

    $default  reduce using rule 45 (feature_decl_seq)

    identifiers_comma_seq      go to state 38
    feature_decl_seq           go to state 63
    nonempty_feature_decl_seq  go to state 40
    feature_decl               go to state 41


state 44

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   40 nonempty_creators_block: nonempty_creators_block CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 40 (nonempty_creators_block)


state 45

   35 rename_seq: ID AS . ID

    ID  shift, and go to state 64


state 46

   20 parent_info: RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | RENAME rename_seq UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   28            | RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq
   32            | RENAME rename_seq UNDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 65


state 47

   22 parent_info: RENAME rename_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   30            | RENAME rename_seq REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 66


state 48

   26 parent_info: RENAME rename_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 67


state 49

   36 rename_seq: rename_seq ',' . ID AS ID

    ID  shift, and go to state 68


state 50

   21 parent_info: UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   29            | UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 69


state 51

   25 parent_info: UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 70


state 52

   23 parent_info: REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 71


state 53

    5 identifiers_comma_seq: identifiers_comma_seq ',' ID .

    $default  reduce using rule 5 (identifiers_comma_seq)


state 54

   61 routine_decl_body: LOCAL . ids_with_type_seq DO opt_semicolon_seq instruction_seq END
   62                  | LOCAL . ids_with_type_seq DO opt_semicolon_seq END

    ID  shift, and go to state 24

    $default  reduce using rule 54 (ids_with_type_seq)

    identifiers_comma_seq       go to state 72
    ids_with_type_seq           go to state 73
    nonempty_ids_with_type_seq  go to state 74
    ids_with_type               go to state 75


state 55

   59 routine_decl_body: DO . opt_semicolon_seq instruction_seq END
   60                  | DO . opt_semicolon_seq END

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 76
    nonempty_opt_semicolon_seq  go to state 62


state 56

   49 feature_decl: identifiers_comma_seq ':' . type
   50             | identifiers_comma_seq ':' . type routine_decl_body

    ID                   shift, and go to state 77
    DATATYPE_BOOLEAN     shift, and go to state 78
    DATATYPE_CHARACTER   shift, and go to state 79
    DATATYPE_INTEGER_8   shift, and go to state 80
    DATATYPE_INTEGER_16  shift, and go to state 81
    DATATYPE_INTEGER_32  shift, and go to state 82
    DATATYPE_INTEGER_64  shift, and go to state 83
    DATATYPE_NATURAL_8   shift, and go to state 84
    DATATYPE_NATURAL_16  shift, and go to state 85
    DATATYPE_NATURAL_32  shift, and go to state 86
    DATATYPE_NATURAL_64  shift, and go to state 87
    DATATYPE_STRING      shift, and go to state 88

    type  go to state 89


state 57

   52 feature_decl: identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type routine_decl_body
   53             | identifiers_comma_seq '(' . ids_with_type_seq ')' routine_decl_body

    ID  shift, and go to state 24

    $default  reduce using rule 54 (ids_with_type_seq)

    identifiers_comma_seq       go to state 72
    ids_with_type_seq           go to state 90
    nonempty_ids_with_type_seq  go to state 74
    ids_with_type               go to state 75


state 58

   51 feature_decl: identifiers_comma_seq routine_decl_body .

    $default  reduce using rule 51 (feature_decl)


state 59

   48 nonempty_feature_decl_seq: nonempty_feature_decl_seq feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 91
    nonempty_opt_semicolon_seq  go to state 62


state 60

   10 nonempty_opt_semicolon_seq: ';' .

    $default  reduce using rule 10 (nonempty_opt_semicolon_seq)


state 61

   47 nonempty_feature_decl_seq: feature_decl opt_semicolon_seq .

    $default  reduce using rule 47 (nonempty_feature_decl_seq)


state 62

    9 opt_semicolon_seq: nonempty_opt_semicolon_seq .
   11 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq . ';'

    ';'  shift, and go to state 92

    $default  reduce using rule 9 (opt_semicolon_seq)


state 63

   44 nonempty_features_block: nonempty_features_block FEATURE feature_decl_seq .

    $default  reduce using rule 44 (nonempty_features_block)


state 64

   35 rename_seq: ID AS ID .

    $default  reduce using rule 35 (rename_seq)


state 65

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   20 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | RENAME rename_seq UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   28            | RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq
   32            | RENAME rename_seq UNDEFINE identifiers_comma_seq .

    REDEFINE  shift, and go to state 93
    SELECT    shift, and go to state 94
    ','       shift, and go to state 37

    $default  reduce using rule 32 (parent_info)


state 66

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent_info: RENAME rename_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   30            | RENAME rename_seq REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 95
    ','     shift, and go to state 37

    $default  reduce using rule 30 (parent_info)


state 67

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   26 parent_info: RENAME rename_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 26 (parent_info)


state 68

   36 rename_seq: rename_seq ',' ID . AS ID

    AS  shift, and go to state 96


state 69

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   21 parent_info: UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   29            | UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 97
    ','     shift, and go to state 37

    $default  reduce using rule 29 (parent_info)


state 70

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   25 parent_info: UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 25 (parent_info)


state 71

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent_info: REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 23 (parent_info)


state 72

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   58 ids_with_type: identifiers_comma_seq . ':' type

    ','  shift, and go to state 37
    ':'  shift, and go to state 98


state 73

   61 routine_decl_body: LOCAL ids_with_type_seq . DO opt_semicolon_seq instruction_seq END
   62                  | LOCAL ids_with_type_seq . DO opt_semicolon_seq END

    DO  shift, and go to state 99


state 74

   55 ids_with_type_seq: nonempty_ids_with_type_seq .
   57 nonempty_ids_with_type_seq: nonempty_ids_with_type_seq . ids_with_type opt_semicolon

    ID  shift, and go to state 24

    $default  reduce using rule 55 (ids_with_type_seq)

    identifiers_comma_seq  go to state 72
    ids_with_type          go to state 100


state 75

   56 nonempty_ids_with_type_seq: ids_with_type . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 101


state 76

   59 routine_decl_body: DO opt_semicolon_seq . instruction_seq END
   60                  | DO opt_semicolon_seq . END

    ID         shift, and go to state 102
    END        shift, and go to state 103
    CREATE     shift, and go to state 104
    CURRENT    shift, and go to state 105
    RESULT     shift, and go to state 106
    PRECURSOR  shift, and go to state 107
    '('        shift, and go to state 108

    instruction_seq  go to state 109
    instruction      go to state 110
    call             go to state 111


state 77

   98 type: ID .

    $default  reduce using rule 98 (type)


state 78

   99 type: DATATYPE_BOOLEAN .

    $default  reduce using rule 99 (type)


state 79

  100 type: DATATYPE_CHARACTER .

    $default  reduce using rule 100 (type)


state 80

  101 type: DATATYPE_INTEGER_8 .

    $default  reduce using rule 101 (type)


state 81

  102 type: DATATYPE_INTEGER_16 .

    $default  reduce using rule 102 (type)


state 82

  103 type: DATATYPE_INTEGER_32 .

    $default  reduce using rule 103 (type)


state 83

  104 type: DATATYPE_INTEGER_64 .

    $default  reduce using rule 104 (type)


state 84

  105 type: DATATYPE_NATURAL_8 .

    $default  reduce using rule 105 (type)


state 85

  106 type: DATATYPE_NATURAL_16 .

    $default  reduce using rule 106 (type)


state 86

  107 type: DATATYPE_NATURAL_32 .

    $default  reduce using rule 107 (type)


state 87

  108 type: DATATYPE_NATURAL_64 .

    $default  reduce using rule 108 (type)


state 88

  109 type: DATATYPE_STRING .

    $default  reduce using rule 109 (type)


state 89

   49 feature_decl: identifiers_comma_seq ':' type .
   50             | identifiers_comma_seq ':' type . routine_decl_body

    LOCAL  shift, and go to state 54
    DO     shift, and go to state 55

    $default  reduce using rule 49 (feature_decl)

    routine_decl_body  go to state 112


state 90

   52 feature_decl: identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type routine_decl_body
   53             | identifiers_comma_seq '(' ids_with_type_seq . ')' routine_decl_body

    ')'  shift, and go to state 113


state 91

   48 nonempty_feature_decl_seq: nonempty_feature_decl_seq feature_decl opt_semicolon_seq .

    $default  reduce using rule 48 (nonempty_feature_decl_seq)


state 92

   11 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq ';' .

    $default  reduce using rule 11 (nonempty_opt_semicolon_seq)


state 93

   20 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   28            | RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 114


state 94

   24 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 115


state 95

   22 parent_info: RENAME rename_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 116


state 96

   36 rename_seq: rename_seq ',' ID AS . ID

    ID  shift, and go to state 117


state 97

   21 parent_info: UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 118


state 98

   58 ids_with_type: identifiers_comma_seq ':' . type

    ID                   shift, and go to state 77
    DATATYPE_BOOLEAN     shift, and go to state 78
    DATATYPE_CHARACTER   shift, and go to state 79
    DATATYPE_INTEGER_8   shift, and go to state 80
    DATATYPE_INTEGER_16  shift, and go to state 81
    DATATYPE_INTEGER_32  shift, and go to state 82
    DATATYPE_INTEGER_64  shift, and go to state 83
    DATATYPE_NATURAL_8   shift, and go to state 84
    DATATYPE_NATURAL_16  shift, and go to state 85
    DATATYPE_NATURAL_32  shift, and go to state 86
    DATATYPE_NATURAL_64  shift, and go to state 87
    DATATYPE_STRING      shift, and go to state 88

    type  go to state 119


state 99

   61 routine_decl_body: LOCAL ids_with_type_seq DO . opt_semicolon_seq instruction_seq END
   62                  | LOCAL ids_with_type_seq DO . opt_semicolon_seq END

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 120
    nonempty_opt_semicolon_seq  go to state 62


state 100

   57 nonempty_ids_with_type_seq: nonempty_ids_with_type_seq ids_with_type . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 121


state 101

   56 nonempty_ids_with_type_seq: ids_with_type opt_semicolon .

    $default  reduce using rule 56 (nonempty_ids_with_type_seq)


state 102

   69 call: ID .
   70     | ID . '(' argument_seq ')'
   71     | ID . '.' call_sub_seq
   72     | ID . '(' argument_seq ')' '.' call_sub_seq

    '('  shift, and go to state 122
    '.'  shift, and go to state 123

    '('       [reduce using rule 69 (call)]
    $default  reduce using rule 69 (call)


state 103

   60 routine_decl_body: DO opt_semicolon_seq END .

    $default  reduce using rule 60 (routine_decl_body)


state 104

   65 instruction: CREATE . ID
   66            | CREATE . ID '.' ID
   67            | CREATE . ID '.' ID '(' argument_seq ')'

    ID  shift, and go to state 124


state 105

   73 call: CURRENT . '.' call_sub_seq

    '.'  shift, and go to state 125


state 106

   74 call: RESULT . '.' call_sub_seq

    '.'  shift, and go to state 126


state 107

   76 call: PRECURSOR .
   77     | PRECURSOR . '(' argument_seq ')'
   78     | PRECURSOR . '.' call_sub_seq
   79     | PRECURSOR . '(' argument_seq ')' '.' call_sub_seq
   80     | PRECURSOR . '{' ID '}'
   81     | PRECURSOR . '{' ID '}' '(' argument_seq ')'
   82     | PRECURSOR . '{' ID '}' '.' call_sub_seq
   83     | PRECURSOR . '{' ID '}' '(' argument_seq ')' '.' call_sub_seq

    '('  shift, and go to state 127
    '.'  shift, and go to state 128
    '{'  shift, and go to state 129

    '('       [reduce using rule 76 (call)]
    $default  reduce using rule 76 (call)


state 108

   75 call: '(' . expr ')' '.' call_sub_seq

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    call  go to state 135
    expr  go to state 136


state 109

   59 routine_decl_body: DO opt_semicolon_seq instruction_seq . END
   64 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID         shift, and go to state 102
    END        shift, and go to state 137
    CREATE     shift, and go to state 104
    CURRENT    shift, and go to state 105
    RESULT     shift, and go to state 106
    PRECURSOR  shift, and go to state 107
    '('        shift, and go to state 108

    instruction  go to state 138
    call         go to state 111


state 110

   63 instruction_seq: instruction . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 139
    nonempty_opt_semicolon_seq  go to state 62


state 111

   68 instruction: call .

    $default  reduce using rule 68 (instruction)


state 112

   50 feature_decl: identifiers_comma_seq ':' type routine_decl_body .

    $default  reduce using rule 50 (feature_decl)


state 113

   52 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type routine_decl_body
   53             | identifiers_comma_seq '(' ids_with_type_seq ')' . routine_decl_body

    LOCAL  shift, and go to state 54
    DO     shift, and go to state 55
    ':'    shift, and go to state 140

    routine_decl_body  go to state 141


state 114

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   20 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   28            | RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 142
    ','     shift, and go to state 37

    $default  reduce using rule 28 (parent_info)


state 115

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   24 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 24 (parent_info)


state 116

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent_info: RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 22 (parent_info)


state 117

   36 rename_seq: rename_seq ',' ID AS ID .

    $default  reduce using rule 36 (rename_seq)


state 118

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   21 parent_info: UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 21 (parent_info)


state 119

   58 ids_with_type: identifiers_comma_seq ':' type .

    $default  reduce using rule 58 (ids_with_type)


state 120

   61 routine_decl_body: LOCAL ids_with_type_seq DO opt_semicolon_seq . instruction_seq END
   62                  | LOCAL ids_with_type_seq DO opt_semicolon_seq . END

    ID         shift, and go to state 102
    END        shift, and go to state 143
    CREATE     shift, and go to state 104
    CURRENT    shift, and go to state 105
    RESULT     shift, and go to state 106
    PRECURSOR  shift, and go to state 107
    '('        shift, and go to state 108

    instruction_seq  go to state 144
    instruction      go to state 110
    call             go to state 111


state 121

   57 nonempty_ids_with_type_seq: nonempty_ids_with_type_seq ids_with_type opt_semicolon .

    $default  reduce using rule 57 (nonempty_ids_with_type_seq)


state 122

   70 call: ID '(' . argument_seq ')'
   72     | ID '(' . argument_seq ')' '.' call_sub_seq

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    $default  reduce using rule 88 (argument_seq)

    call                   go to state 135
    argument_seq           go to state 145
    nonempty_argument_seq  go to state 146
    expr                   go to state 147


state 123

   71 call: ID '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 149


state 124

   65 instruction: CREATE ID .
   66            | CREATE ID . '.' ID
   67            | CREATE ID . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 150

    $default  reduce using rule 65 (instruction)


state 125

   73 call: CURRENT '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 151


state 126

   74 call: RESULT '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 152


state 127

   77 call: PRECURSOR '(' . argument_seq ')'
   79     | PRECURSOR '(' . argument_seq ')' '.' call_sub_seq

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    $default  reduce using rule 88 (argument_seq)

    call                   go to state 135
    argument_seq           go to state 153
    nonempty_argument_seq  go to state 146
    expr                   go to state 147


state 128

   78 call: PRECURSOR '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 154


state 129

   80 call: PRECURSOR '{' . ID '}'
   81     | PRECURSOR '{' . ID '}' '(' argument_seq ')'
   82     | PRECURSOR '{' . ID '}' '.' call_sub_seq
   83     | PRECURSOR '{' . ID '}' '(' argument_seq ')' '.' call_sub_seq

    ID  shift, and go to state 155


state 130

   93 expr: LITER_BOOLEAN .

    $default  reduce using rule 93 (expr)


state 131

   94 expr: LITER_INTEGER .

    $default  reduce using rule 94 (expr)


state 132

   95 expr: LITER_CHAR .

    $default  reduce using rule 95 (expr)


state 133

   96 expr: LITER_STRING .

    $default  reduce using rule 96 (expr)


state 134

   75 call: '(' . expr ')' '.' call_sub_seq
   92 expr: '(' . expr ')'

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    call  go to state 135
    expr  go to state 156


state 135

   97 expr: call .

    $default  reduce using rule 97 (expr)


state 136

   75 call: '(' expr . ')' '.' call_sub_seq

    ')'  shift, and go to state 157


state 137

   59 routine_decl_body: DO opt_semicolon_seq instruction_seq END .

    $default  reduce using rule 59 (routine_decl_body)


state 138

   64 instruction_seq: instruction_seq instruction . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 158
    nonempty_opt_semicolon_seq  go to state 62


state 139

   63 instruction_seq: instruction opt_semicolon_seq .

    $default  reduce using rule 63 (instruction_seq)


state 140

   52 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type routine_decl_body

    ID                   shift, and go to state 77
    DATATYPE_BOOLEAN     shift, and go to state 78
    DATATYPE_CHARACTER   shift, and go to state 79
    DATATYPE_INTEGER_8   shift, and go to state 80
    DATATYPE_INTEGER_16  shift, and go to state 81
    DATATYPE_INTEGER_32  shift, and go to state 82
    DATATYPE_INTEGER_64  shift, and go to state 83
    DATATYPE_NATURAL_8   shift, and go to state 84
    DATATYPE_NATURAL_16  shift, and go to state 85
    DATATYPE_NATURAL_32  shift, and go to state 86
    DATATYPE_NATURAL_64  shift, and go to state 87
    DATATYPE_STRING      shift, and go to state 88

    type  go to state 159


state 141

   53 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' routine_decl_body .

    $default  reduce using rule 53 (feature_decl)


state 142

   20 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 160


state 143

   62 routine_decl_body: LOCAL ids_with_type_seq DO opt_semicolon_seq END .

    $default  reduce using rule 62 (routine_decl_body)


state 144

   61 routine_decl_body: LOCAL ids_with_type_seq DO opt_semicolon_seq instruction_seq . END
   64 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID         shift, and go to state 102
    END        shift, and go to state 161
    CREATE     shift, and go to state 104
    CURRENT    shift, and go to state 105
    RESULT     shift, and go to state 106
    PRECURSOR  shift, and go to state 107
    '('        shift, and go to state 108

    instruction  go to state 138
    call         go to state 111


state 145

   70 call: ID '(' argument_seq . ')'
   72     | ID '(' argument_seq . ')' '.' call_sub_seq

    ')'  shift, and go to state 162


state 146

   89 argument_seq: nonempty_argument_seq .
   91 nonempty_argument_seq: nonempty_argument_seq . ',' expr

    ','  shift, and go to state 163

    $default  reduce using rule 89 (argument_seq)


state 147

   90 nonempty_argument_seq: expr .

    $default  reduce using rule 90 (nonempty_argument_seq)


state 148

   84 call_sub_seq: ID .
   85             | ID . '(' argument_seq ')'

    '('  shift, and go to state 164

    '('       [reduce using rule 84 (call_sub_seq)]
    $default  reduce using rule 84 (call_sub_seq)


state 149

   71 call: ID '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 71 (call)


state 150

   66 instruction: CREATE ID '.' . ID
   67            | CREATE ID '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 166


state 151

   73 call: CURRENT '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 73 (call)


state 152

   74 call: RESULT '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 74 (call)


state 153

   77 call: PRECURSOR '(' argument_seq . ')'
   79     | PRECURSOR '(' argument_seq . ')' '.' call_sub_seq

    ')'  shift, and go to state 167


state 154

   78 call: PRECURSOR '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 78 (call)


state 155

   80 call: PRECURSOR '{' ID . '}'
   81     | PRECURSOR '{' ID . '}' '(' argument_seq ')'
   82     | PRECURSOR '{' ID . '}' '.' call_sub_seq
   83     | PRECURSOR '{' ID . '}' '(' argument_seq ')' '.' call_sub_seq

    '}'  shift, and go to state 168


state 156

   75 call: '(' expr . ')' '.' call_sub_seq
   92 expr: '(' expr . ')'

    ')'  shift, and go to state 169


state 157

   75 call: '(' expr ')' . '.' call_sub_seq

    '.'  shift, and go to state 170


state 158

   64 instruction_seq: instruction_seq instruction opt_semicolon_seq .

    $default  reduce using rule 64 (instruction_seq)


state 159

   52 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . routine_decl_body

    LOCAL  shift, and go to state 54
    DO     shift, and go to state 55

    routine_decl_body  go to state 171


state 160

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   20 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 20 (parent_info)


state 161

   61 routine_decl_body: LOCAL ids_with_type_seq DO opt_semicolon_seq instruction_seq END .

    $default  reduce using rule 61 (routine_decl_body)


state 162

   70 call: ID '(' argument_seq ')' .
   72     | ID '(' argument_seq ')' . '.' call_sub_seq

    '.'  shift, and go to state 172

    $default  reduce using rule 70 (call)


state 163

   91 nonempty_argument_seq: nonempty_argument_seq ',' . expr

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    call  go to state 135
    expr  go to state 173


state 164

   85 call_sub_seq: ID '(' . argument_seq ')'

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    $default  reduce using rule 88 (argument_seq)

    call                   go to state 135
    argument_seq           go to state 174
    nonempty_argument_seq  go to state 146
    expr                   go to state 147


state 165

   86 call_sub_seq: call_sub_seq '.' . ID
   87             | call_sub_seq '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 175


state 166

   66 instruction: CREATE ID '.' ID .
   67            | CREATE ID '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 176

    '('       [reduce using rule 66 (instruction)]
    $default  reduce using rule 66 (instruction)


state 167

   77 call: PRECURSOR '(' argument_seq ')' .
   79     | PRECURSOR '(' argument_seq ')' . '.' call_sub_seq

    '.'  shift, and go to state 177

    $default  reduce using rule 77 (call)


state 168

   80 call: PRECURSOR '{' ID '}' .
   81     | PRECURSOR '{' ID '}' . '(' argument_seq ')'
   82     | PRECURSOR '{' ID '}' . '.' call_sub_seq
   83     | PRECURSOR '{' ID '}' . '(' argument_seq ')' '.' call_sub_seq

    '('  shift, and go to state 178
    '.'  shift, and go to state 179

    '('       [reduce using rule 80 (call)]
    $default  reduce using rule 80 (call)


state 169

   75 call: '(' expr ')' . '.' call_sub_seq
   92 expr: '(' expr ')' .

    '.'  shift, and go to state 170

    $default  reduce using rule 92 (expr)


state 170

   75 call: '(' expr ')' '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 180


state 171

   52 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type routine_decl_body .

    $default  reduce using rule 52 (feature_decl)


state 172

   72 call: ID '(' argument_seq ')' '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 181


state 173

   91 nonempty_argument_seq: nonempty_argument_seq ',' expr .

    $default  reduce using rule 91 (nonempty_argument_seq)


state 174

   85 call_sub_seq: ID '(' argument_seq . ')'

    ')'  shift, and go to state 182


state 175

   86 call_sub_seq: call_sub_seq '.' ID .
   87             | call_sub_seq '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 183

    '('       [reduce using rule 86 (call_sub_seq)]
    $default  reduce using rule 86 (call_sub_seq)


state 176

   67 instruction: CREATE ID '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    $default  reduce using rule 88 (argument_seq)

    call                   go to state 135
    argument_seq           go to state 184
    nonempty_argument_seq  go to state 146
    expr                   go to state 147


state 177

   79 call: PRECURSOR '(' argument_seq ')' '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 185


state 178

   81 call: PRECURSOR '{' ID '}' '(' . argument_seq ')'
   83     | PRECURSOR '{' ID '}' '(' . argument_seq ')' '.' call_sub_seq

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    $default  reduce using rule 88 (argument_seq)

    call                   go to state 135
    argument_seq           go to state 186
    nonempty_argument_seq  go to state 146
    expr                   go to state 147


state 179

   82 call: PRECURSOR '{' ID '}' '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 187


state 180

   75 call: '(' expr ')' '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 75 (call)


state 181

   72 call: ID '(' argument_seq ')' '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 72 (call)


state 182

   85 call_sub_seq: ID '(' argument_seq ')' .

    $default  reduce using rule 85 (call_sub_seq)


state 183

   87 call_sub_seq: call_sub_seq '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 102
    LITER_BOOLEAN  shift, and go to state 130
    LITER_INTEGER  shift, and go to state 131
    LITER_CHAR     shift, and go to state 132
    LITER_STRING   shift, and go to state 133
    CURRENT        shift, and go to state 105
    RESULT         shift, and go to state 106
    PRECURSOR      shift, and go to state 107
    '('            shift, and go to state 134

    $default  reduce using rule 88 (argument_seq)

    call                   go to state 135
    argument_seq           go to state 188
    nonempty_argument_seq  go to state 146
    expr                   go to state 147


state 184

   67 instruction: CREATE ID '.' ID '(' argument_seq . ')'

    ')'  shift, and go to state 189


state 185

   79 call: PRECURSOR '(' argument_seq ')' '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 79 (call)


state 186

   81 call: PRECURSOR '{' ID '}' '(' argument_seq . ')'
   83     | PRECURSOR '{' ID '}' '(' argument_seq . ')' '.' call_sub_seq

    ')'  shift, and go to state 190


state 187

   82 call: PRECURSOR '{' ID '}' '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 82 (call)


state 188

   87 call_sub_seq: call_sub_seq '.' ID '(' argument_seq . ')'

    ')'  shift, and go to state 191


state 189

   67 instruction: CREATE ID '.' ID '(' argument_seq ')' .

    $default  reduce using rule 67 (instruction)


state 190

   81 call: PRECURSOR '{' ID '}' '(' argument_seq ')' .
   83     | PRECURSOR '{' ID '}' '(' argument_seq ')' . '.' call_sub_seq

    '.'  shift, and go to state 192

    $default  reduce using rule 81 (call)


state 191

   87 call_sub_seq: call_sub_seq '.' ID '(' argument_seq ')' .

    $default  reduce using rule 87 (call_sub_seq)


state 192

   83 call: PRECURSOR '{' ID '}' '(' argument_seq ')' '.' . call_sub_seq

    ID  shift, and go to state 148

    call_sub_seq  go to state 193


state 193

   83 call: PRECURSOR '{' ID '}' '(' argument_seq ')' '.' call_sub_seq .
   86 call_sub_seq: call_sub_seq . '.' ID
   87             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 165

    $default  reduce using rule 83 (call)
